output "cluster_id" {
  description = "EKS cluster ID"
  value       = module.eks.cluster_id
}

output "cluster_endpoint" {
  description = "Endpoint for EKS control plane"
  value       = module.eks.cluster_endpoint
}

output "cluster_security_group_id" {
  description = "Security group ID attached to the EKS cluster"
  value       = module.eks.cluster_security_group_id
}

output "cluster_name" {
  description = "Kubernetes Cluster Name"
  value       = module.eks.cluster_name
}

output "cluster_arn" {
  description = "The Amazon Resource Name (ARN) of the cluster"
  value       = module.eks.cluster_arn
}

output "cluster_certificate_authority_data" {
  description = "Base64 encoded certificate data required to communicate with the cluster"
  value       = module.eks.cluster_certificate_authority_data
}

output "cluster_oidc_issuer_url" {
  description = "The URL on the EKS cluster for the OpenID Connect identity provider"
  value       = module.eks.cluster_oidc_issuer_url
}

output "cluster_platform_version" {
  description = "Platform version for the cluster"
  value       = module.eks.cluster_platform_version
}

output "cluster_status" {
  description = "Status of the EKS cluster"
  value       = module.eks.cluster_status
}

# VPC outputs
output "vpc_id" {
  description = "The ID of the VPC"
  value       = module.vpc.vpc_id
}

output "vpc_cidr_block" {
  description = "The CIDR block of the VPC"
  value       = module.vpc.vpc_cidr_block
}

output "private_subnets" {
  description = "List of IDs of private subnets"
  value       = module.vpc.private_subnets
}

output "public_subnets" {
  description = "List of IDs of public subnets"
  value       = module.vpc.public_subnets
}

output "nat_public_ips" {
  description = "List of public Elastic IPs created for AWS NAT Gateway"
  value       = module.vpc.nat_public_ips
}

# Node groups outputs
output "eks_managed_node_groups" {
  description = "Map of attribute maps for all EKS managed node groups created"
  value       = module.eks.eks_managed_node_groups
}

output "eks_managed_node_groups_iam_role_arns" {
  description = "List of IAM role ARNs for EKS managed node groups"
  value = [
    for ng in module.eks.eks_managed_node_groups : ng.iam_role_arn
  ]
}

# ECR outputs
output "ecr_repository_arn" {
  description = "ARN of the ECR repository"
  value       = var.create_ecr_repository ? aws_ecr_repository.app[0].arn : null
}

output "ecr_repository_url" {
  description = "URL of the ECR repository"
  value       = var.create_ecr_repository ? aws_ecr_repository.app[0].repository_url : null
}

output "ecr_repository_registry_id" {
  description = "Registry ID of the ECR repository"
  value       = var.create_ecr_repository ? aws_ecr_repository.app[0].registry_id : null
}

# KMS outputs
output "kms_key_arn" {
  description = "ARN of the KMS key used for cluster encryption"
  value       = aws_kms_key.eks.arn
}

output "kms_key_id" {
  description = "ID of the KMS key used for cluster encryption"
  value       = aws_kms_key.eks.key_id
}

# OIDC outputs
output "oidc_provider_arn" {
  description = "ARN of the OIDC Provider"
  value       = module.eks.oidc_provider_arn
}

# CloudWatch outputs
output "cloudwatch_log_group_arn" {
  description = "ARN of the CloudWatch log group for EKS"
  value       = var.enable_monitoring ? aws_cloudwatch_log_group.eks[0].arn : null
}

output "cloudwatch_log_group_name" {
  description = "Name of the CloudWatch log group for EKS"
  value       = var.enable_monitoring ? aws_cloudwatch_log_group.eks[0].name : null
}

# Load Balancer Controller outputs
output "aws_load_balancer_controller_role_arn" {
  description = "ARN of the IAM role for AWS Load Balancer Controller"
  value       = var.enable_aws_load_balancer_controller ? aws_iam_role.aws_load_balancer_controller[0].arn : null
}

# ConfigMap para kubectl
output "kubectl_config" {
  description = "kubectl config as generated by the module"
  value       = module.eks.kubeconfig
  sensitive   = true
}

# Comandos útiles
output "configure_kubectl" {
  description = "Configure kubectl: make sure you're logged in with the correct AWS profile and run the following command to update your kubeconfig"
  value       = "aws eks --region ${var.region} update-kubeconfig --name ${module.eks.cluster_name}"
}

output "get_nodes_command" {
  description = "Command to get cluster nodes"
  value       = "kubectl get nodes"
}

output "get_pods_command" {
  description = "Command to get pods in all namespaces"
  value       = "kubectl get pods -A"
}

# Información de costos
output "estimated_monthly_cost" {
  description = "Estimated monthly cost for the EKS cluster (approximate)"
  value       = "EKS Cluster: ~$70-100/month, EC2 instances: depends on instance type and usage, NAT Gateway: ~$35/month per AZ, VPC endpoints: ~$7/month each"
}

# Información de seguridad
output "security_group_additional_id" {
  description = "ID of the additional security group for worker nodes"
  value       = aws_security_group.additional.id
}

# Información de networking
output "vpc_nat_gateway_ids" {
  description = "IDs of the NAT Gateways created"
  value       = module.vpc.natgw_ids
}

output "vpc_igw_id" {
  description = "ID of the Internet Gateway"
  value       = module.vpc.igw_id
}