# Service Account con IRSA para EKS
# Este archivo configura un Service Account con IAM Roles for Service Accounts (IRSA)

apiVersion: v1
kind: ServiceAccount
metadata:
  name: my-app-sa
  namespace: default
  annotations:
    # ARN del role IAM que será asumido por el service account
    eks.amazonaws.com/role-arn: arn:aws:iam::123456789012:role/my-app-role
    # Opcional: audience para el token OIDC
    eks.amazonaws.com/audience: sts.amazonaws.com
    # Opcional: token expiration (máximo 1 hora)
    eks.amazonaws.com/token-expiration: 3600
  labels:
    app: my-app
    environment: production
---
# Ejemplo de IAM Policy para el role
# Esta policy debe adjuntarse al role IAM referenciado arriba
apiVersion: iam.aws.com/v1
kind: PolicyDocument
metadata:
  name: my-app-policy
  namespace: default
data:
  policy: |
    {
      "Version": "2012-10-17",
      "Statement": [
        {
          "Effect": "Allow",
          "Action": [
            "s3:GetObject",
            "s3:PutObject",
            "s3:DeleteObject"
          ],
          "Resource": "arn:aws:s3:::my-app-bucket/*"
        },
        {
          "Effect": "Allow",
          "Action": [
            "secretsmanager:GetSecretValue"
          ],
          "Resource": "arn:aws:secretsmanager:us-east-1:123456789012:secret:my-app/*"
        },
        {
          "Effect": "Allow",
          "Action": [
            "kms:Decrypt",
            "kms:DescribeKey"
          ],
          "Resource": "arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012"
        }
      ]
    }
---
# Ejemplo de uso del Service Account en un Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-app-with-irsa
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: my-app
  template:
    metadata:
      labels:
        app: my-app
    spec:
      serviceAccountName: my-app-sa  # Referencia al SA con IRSA
      containers:
      - name: app
        image: nginx:latest
        ports:
        - containerPort: 80
        env:
        - name: AWS_REGION
          value: "us-east-1"
        - name: AWS_DEFAULT_REGION
          value: "us-east-1"
        # Las credenciales se inyectan automáticamente por IRSA
        # No necesitas configurar AWS_ACCESS_KEY_ID o AWS_SECRET_ACCESS_KEY